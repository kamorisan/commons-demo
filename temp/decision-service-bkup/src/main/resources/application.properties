quarkus.log.level=INFO
quarkus.log.category."io.smallrye.reactive.messaging".level=DEBUG
%dev.quarkus.http.port=81

# Quarkus configuration file
# key = value
#quarkus.datasource.driver=org.postgresql.Driver
#quarkus.datasource.url=jdbc:postgresql://postgresql:5432/tradedb
#quarkus.datasource.username=tradedb
#quarkus.datasource.password=tradedb
#quarkus.hibernate-orm.database.generation=drop-and-create
#quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect
#quarkus.hibernate-orm.log.sql=true

mp.messaging.incoming.orders.connector=smallrye-kafka
mp.messaging.incoming.orders.topic=incoming-topic
#PJname変更
#mp.messaging.incoming.orders.bootstrap.servers=demo-cluster-kafka-bootstrap.demo-pj.svc.cluster.local:9092
mp.messaging.incoming.orders.bootstrap.servers=localhost:9092 
mp.messaging.incoming.orders.group.id=decision-service
mp.messaging.incoming.orders.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.orders.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.orders.max.poll.interval.ms=50000

#mp.messaging.outgoing.webapp.connector=smallrye-kafka
#mp.messaging.outgoing.webapp.topic=mytopic
#mp.messaging.outgoing.webapp.bootstrap.servers=demo-cluster-kafka-bootstrap.demo-pj.svc.cluster.local:9092
#mp.messaging.outgoing.webapp.bootstrap.servers=localhost:9092 
#mp.messaging.outgoing.webapp.group.id=decision-service
#mp.messaging.outgoing.webapp.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#mp.messaging.outgoing.webapp.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#mp.messaging.outgoing.webapp.max.poll.interval.ms=50000

%dev.mp.messaging.incoming.orders.group.id=dev-decision-service
%dev.quarkus.datasource.url=jdbc:postgresql://localhost:5432/tradedb

#ここ追加
quarkus.swagger-ui.always-include=true
quarkus.package.uber-jar=true